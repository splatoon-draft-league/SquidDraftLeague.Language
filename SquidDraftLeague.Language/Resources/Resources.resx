<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BanMessage" xml:space="preserve">
    <value>You currently are banned from participating in SDL. Time remaining for your ban: </value>
  </data>
  <data name="InvalidReportNameResolve" xml:space="preserve">
    <value>Cannot find user with this name. Make sure you use the format `"Username#Discrimator"` e.g. `"DeltaJordan#5497"` and wrap it in quotes to capture any spaces.</value>
  </data>
  <data name="InvalidReportNameSplit" xml:space="preserve">
    <value>Please use this format: `"Username#Discrimator"` e.g. `"DeltaJordan#5497"` for reporting a user. Make sure to wrap it in quotes if it has spaces in the name.</value>
  </data>
  <data name="InvalidReportNoReason" xml:space="preserve">
    <value>Reporting requires an explaination after the user. Example command: `%report "DeltaJordan#5497" Called me a crayon eater.`</value>
  </data>
  <data name="JoinLobbyInLobby" xml:space="preserve">
    <value>You cannot join a lobby if you are already in one!</value>
  </data>
  <data name="JoinLobbyInSet" xml:space="preserve">
    <value>You are already in a set, there is no need to join a lobby.</value>
  </data>
  <data name="LobbiesFull" xml:space="preserve">
    <value>There are already the max amount of lobbies! Please wait until another lobby either enters your power level threshold or there are less queuing lobbies.</value>
  </data>
  <data name="NotInLobby" xml:space="preserve">
    <value>You are not in a lobby or this is not a set channel!</value>
  </data>
  <data name="RegistrationBegin" xml:space="preserve">
    <value>Thank you for your interest in SDL! All responses to my questions will be pulled from the next message sent by you. To begin, please state your timezone.</value>
  </data>
  <data name="RegistrationComplete" xml:space="preserve">
    <value>Your registration has been sent to staff and will be reviewed. If we require any more info we will get in contact with you. Otherwise, this is all you have to do for now other than wait for our opening date, June 23rd. Thank you for your registration!</value>
  </data>
  <data name="RegistrationNickname" xml:space="preserve">
    <value>Next up, what would you like your nickname for standings to be? E.g. your in-game name in Splatoon.</value>
  </data>
  <data name="RegistrationProcessing" xml:space="preserve">
    <value>Please wait while we process your request. If you don't get a reply from this bot for more than 10 minutes, please get in contact with SDL staff.</value>
  </data>
  <data name="RegistrationScreenshot" xml:space="preserve">
    <value>Finally, please **directly upload** a screenshot of your solo queue powers from the last month. **DO NOT** link it as this may cause issues. Be sure to upload the correct image as well as **you may not retry this response**. You can, however, still retry the last response if needed. If you do not wish to upload a screenshot reply "No". Please note that this most likely cause you to be placed in the lowest seeding class, mainly depending on the team experience you listed in the last question.</value>
  </data>
  <data name="RegistrationTeams" xml:space="preserve">
    <value>Now we will need you to list any competitive teams you have been on within the last 3 months. If there are none, just reply "None" without the quotes.</value>
  </data>
  <data name="RegistrationTimeout" xml:space="preserve">
    <value>It's been 10 minutes since you last responded. You will have to try again later.</value>
  </data>
  <data name="ReportErrorResponse" xml:space="preserve">
    <value>This command is to be used to report discrepancies during a set. If you want to report a player, use `%report name` in DMs with this bot.</value>
  </data>
  <data name="ReportResponse" xml:space="preserve">
    <value>Moderators have been notified of this report and will get back to you if more info is needed.</value>
  </data>
  <data name="SetsFull" xml:space="preserve">
    <value>Sit tight in {0}! There are too many sets in progress right now. Once a set finishes you will be notified.</value>
    <comment>{0} is the standby channel.</comment>
  </data>
</root>